@model PaginatedList<ItemViewModel>
@{
    ViewData["Title"] = "Items";
    int i = 0;
}

<form asp-action="Items" method="get">
    <div class="form-row mx-2 my-2">
        <div class="form-col mr-2">
            <select id="categorySelect" class="form-control" name="CatFilter" multiple>
                @foreach (var cat in ViewData["Cats"] as List<CategoryViewModel>)
                {
                    @if ((ViewData["CatFilter"] as string[]).Contains(cat.Name))
                    {
                        <option value="@cat.Name" selected>@cat.Name</option>
                    }
                    else
                    {
                        <option value="@cat.Name">@cat.Name</option>
                    }
                }
            </select>
        </div>

        <div class="form-col mr-2">
            <input id="NameFilter" class="form-control" type="text" name="NameFilter" placeholder="Item Name" value="@ViewData["NameFilter"]"/>
        </div>

        <div class="form-col mr-2">
            <input id="pageSize" class="form-control" type="number" name="pageSize" placeholder="Page Size" min="5" value="@Model.PageSize"/>
        </div>
    </div>
    <div class="form-row mx-2 mb-2">
        <div class="form-col mr-2">
            <input id="MinValue" name="MinVal" type="number" step="0.01" min=0.01 value="@ViewData["MinVal"]" class="form-control" placeholder="Min Item Value"/>
        </div>

        <div class="form-col mr-2">
            <input id="MaxValue" name="MaxVal" type="number" step="0.01" min=0.01 value="@ViewData["MaxVal"]" class="form-control" placeholder="Max Item Value"/>
        </div>
    </div>

    <div class="form-row mx-2 mb-2">
        <div class="form-col mr-2">
            <input id="MinAmount" name="MinAmount" type="number" min=0 value="@ViewData["MinAmount"]" class="form-control" placeholder="Min Item Count"/>
        </div>

        <div class="form-col mr-2">
            <input id="MaxAmount" name="MaxAmount" type="number" min=0 value="@ViewData["MaxAmount"]" class="form-control" placeholder="Max Item Count"/>
        </div>
    </div>

    <div class="form-row mx-2 mb-2">
        <div class="form-col">
            <input type="submit" value="Search" class="btn btn-outline-dark"/>
        </div>
        <div class="form-col mx-2">
            <a asp-action="Items" class="btn btn-outline-danger">Clear filters</a>
        </div>
    </div>
</form>

<div>
    <table id="table" class="text-center table table-striped">
        <thead class="thead-light">
        <th scope="col">
            <a asp-action="Items"
               asp-route-sortOrder="@ViewData["IdSortParam"]"
               asp-route-pageIndex="@(Model.PageIndex)"
               asp-route-NameFilter="@ViewData["NameFilter"]"
               asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
               asp-route-MaxAmount="@ViewData["MaxAmount"]"
               asp-route-MaxVal="@ViewData["MaxVal"]"
               asp-route-MinVal="@ViewData["MinVal"]"
               asp-route-MinAmount="@ViewData["MinAmount"]"
               asp-route-pageSize="@Model.PageSize">
                #
            </a>
        </th>
        <th scope="col">
            <a asp-action="Items"
               asp-route-sortOrder="@ViewData["NameSortParam"]"
               asp-route-pageIndex="@(Model.PageIndex)"
               asp-route-NameFilter="@ViewData["NameFilter"]"
               asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
               asp-route-MaxAmount="@ViewData["MaxAmount"]"
               asp-route-MaxVal="@ViewData["MaxVal"]"
               asp-route-MinVal="@ViewData["MinVal"]"
               asp-route-MinAmount="@ViewData["MinAmount"]"
               asp-route-pageSize="@Model.PageSize">
                Name
            </a>
        </th>
        <th scope="col">
            <a asp-action="Items"
               asp-route-sortOrder="@ViewData["CatNameSortParam"]"
               asp-route-pageIndex="@(Model.PageIndex)"
               asp-route-NameFilter="@ViewData["NameFilter"]"
               asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
               asp-route-MaxAmount="@ViewData["MaxAmount"]"
               asp-route-MaxVal="@ViewData["MaxVal"]"
               asp-route-MinVal="@ViewData["MinVal"]"
               asp-route-MinAmount="@ViewData["MinAmount"]"
               asp-route-pageSize="@Model.PageSize">
                Categories
            </a>
        </th>
        <th scope="col">
            <a asp-action="Items"
               asp-route-sortOrder="@ViewData["AmountSortParam"]"
               asp-route-pageIndex="@(Model.PageIndex)"
               asp-route-NameFilter="@ViewData["NameFilter"]"
               asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
               asp-route-MaxAmount="@ViewData["MaxAmount"]"
               asp-route-MaxVal="@ViewData["MaxVal"]"
               asp-route-MinVal="@ViewData["MinVal"]"
               asp-route-MinAmount="@ViewData["MinAmount"]"
               asp-route-pageSize="@Model.PageSize">
                Total Amount
            </a>
        </th>

        <th scope="col">
            <a asp-action="Items"
               asp-route-sortOrder="@ViewData["ValueSortParam"]"
               asp-route-pageIndex="@(Model.PageIndex)"
               asp-route-NameFilter="@ViewData["NameFilter"]"
               asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
               asp-route-MaxAmount="@ViewData["MaxAmount"]"
               asp-route-MaxVal="@ViewData["MaxVal"]"
               asp-route-MinVal="@ViewData["MinVal"]"
               asp-route-MinAmount="@ViewData["MinAmount"]"
               asp-route-pageSize="@Model.PageSize">
                Total Value
            </a>
        </th>

        <th scope="col">Action</th>
        </thead>
        <tbody>
        @foreach (var item in ViewData.Model)
        {
            i++;
            <tr>
                <td>
                    @i
                </td>
                <td>
                    @item.Name
                </td>
                <td>
                    @String.Join(", ", item.Categories.Select(i => i.Name).ToArray())
                </td>
                <td>
                    @item.TotalAmount
                </td>
                <td>
                    @item.TotalValue
                </td>


                <td>
                    <button type="button" class="fill-modal btn btn-outline-primary" data-toggle="modal" value="@item.Id" data-target="#addingModal">
                        Edit
                    </button>

                    <a class="btn btn-outline-info" asp-controller="Index" asp-action="ItemStats" asp-route-id="@item.Id">
                        Details
                    </a>

                    <a href="~/Item/RemoveItem/?id=@item.Id" class="btn btn-outline-danger">
                        Remove
                    </a>

                </td>
            </tr>
        }
        </tbody>
    </table>
</div>
<div class="float-right">
    <button type="button" class="clear-modal btn btn-primary" data-toggle="modal" data-target="#addingModal">
        Add New Item
    </button>

    <a asp-action="Download"
       asp-route-sortOrder="@ViewData["SortOrder"]"
       asp-route-NameFilter="@ViewData["NameFilter"]"
       asp-route-MaxAmount="@ViewData["MaxAmount"]"
       asp-route-MaxVal="@ViewData["MaxVal"]"
       asp-route-MinVal="@ViewData["MinVal"]"
       asp-route-MinAmount="@ViewData["MinAmount"]"
       asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"

       class="btn btn-outline-primary">
        Download As ExcelFile
    </a>
</div>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<div class="container">
    <div class="row">
        <a asp-action="Items"
           asp-route-sortOrder="@ViewData["SortOrder"]"
           asp-route-pageIndex="@(Model.PageIndex - 1)"
           asp-route-NameFilter="@ViewData["NameFilter"]"
           asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
           asp-route-MaxAmount="@ViewData["MaxAmount"]"
           asp-route-MaxVal="@ViewData["MaxVal"]"
           asp-route-MinVal="@ViewData["MinVal"]"
           asp-route-MinAmount="@ViewData["MinAmount"]"
           asp-route-pageSize="@Model.PageSize"
           class="btn btn-outline-dark @prevDisabled">
            Previous
        </a>

        <div class="border border-dark rounded input text-justify px-2 mx-2">
            <span class="align-middle">Page Index: @Model.PageIndex</span>
        </div>

        <a asp-action="Items"
           asp-route-sortOrder="@ViewData["SortOrder"]"
           asp-route-pageIndex="@(Model.PageIndex + 1)"
           asp-route-NameFilter="@ViewData["NameFilter"]"
           asp-route-CatFilter="@(string.Join(",", (ViewData["CatFilter"] as string[])))"
           asp-route-pageSize="@Model.PageSize"
           asp-route-MaxAmount="@ViewData["MaxAmount"]"
           asp-route-MaxVal="@ViewData["MaxVal"]"
           asp-route-MinVal="@ViewData["MinVal"]"
           asp-route-MinAmount="@ViewData["MinAmount"]"
           class="btn btn-outline-dark @nextDisabled">
            Next
        </a>
    </div>
</div>

<div class="modal fade" id="infoModal" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div id="infoModalContent" class="modal-body">

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="addingModal" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form class="needs-validation" method="post" novalidate>
                <div id="modals-body" class="modal-body">
                    <label for="Name" class="col-form-label float-left">Item Name:</label>
                    <input id="Name" name="Name" type="text" class="form-control" placeholder="item name" required/>

                    <div class="float-left invalid-feedback">
                        Please provide an item name.
                    </div>

                    <label for="Cats" class="form-label">Categories:</label>

                    <select id="Cats" name="categories" class="form-control" multiple required>
                        @foreach (var cat in ViewData["Cats"] as List<CategoryViewModel>)
                        {
                            <option value="@cat.Name">@cat.Name</option>
                        }
                    </select>
                    <div class="float-left invalid-feedback">
                        Please provide some categories.
                    </div>

                </div>

                <div class="modal-footer form-check">
                    <button type="submit" id="Id" class="btn btn-primary" name="Id" value="newItem">Add New Item</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
            $(document).ready(function () {
                $('#Cats').select2({
                    dropdownParent: $("#modals-body"),
                    multiple: true,
                    tags: true,
                    width: '100%',
                    theme: 'bootstrap4'
                    //    placeholder: 'Categories',
                });

                $('#categorySelect').select2({
                    multiple: true,
                    theme: 'bootstrap4',
                    placeholder: "Select Categories"
                });

                $('.fill-modal').click(function () {
                    var $row = $(this).closest("tr");
                    $('#Name').val($row.children("td:nth-child(2)").text().trim());
                    $('#Id').val(parseInt($(this).val()));
                    $('#Cats').val($row.children("td:nth-child(3)").text().trim().split(", "));
                    $('#Cats').trigger('change');
                });

                $('.clear-modal').click(function () {
                    $('#Name').val(null);
                    $('#Id').val(null);
                    $('#Cats').val(null).trigger('change');
                });

                $('.info-modal').click(function () {
                    //hidden-stats
                    $('#infoModalContent').val($(this).parents('tr').find('.hidden-stats input[type="hidden"]').val().text());
                });
            });

            // Example starter JavaScript for disabling form submissions if there are invalid fields
            (function () {
                'use strict';
                window.addEventListener('load', function () {
                    // Fetch all the forms we want to apply custom Bootstrap validation styles to
                    var forms = document.getElementsByClassName('needs-validation');
                    // Loop over them and prevent submission
                    var validation = Array.prototype.filter.call(forms, function (form) {
                        form.addEventListener('submit', function (event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();
        </script>